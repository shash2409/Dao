{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/regenerator/index.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { providerFromEngine, createFetchMiddleware } from '@toruslabs/base-controllers';\nimport { mergeMiddleware, createAsyncMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport { Transaction, Keypair, Message } from '@solana/web3.js';\nimport bs58 from 'bs58';\nimport { ethErrors } from 'eth-rpc-errors';\nimport nacl from '@toruslabs/tweetnacl-js';\n\nfunction createGetAccountsMiddleware(_ref) {\n  var getAccounts = _ref.getAccounts;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(request, response, next) {\n      var method, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== \"getAccounts\")) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", next());\n\n            case 3:\n              if (getAccounts) {\n                _context.next = 5;\n                break;\n              }\n\n              throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n\n            case 5:\n              _context.next = 7;\n              return getAccounts(request);\n\n            case 7:\n              accounts = _context.sent;\n              response.result = accounts;\n              return _context.abrupt(\"return\", undefined);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }());\n}\n\nfunction createRequestAccountsMiddleware(_ref2) {\n  var requestAccounts = _ref2.requestAccounts;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(request, response, next) {\n      var method, accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== \"requestAccounts\")) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", next());\n\n            case 3:\n              if (requestAccounts) {\n                _context2.next = 5;\n                break;\n              }\n\n              throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n\n            case 5:\n              _context2.next = 7;\n              return requestAccounts(request);\n\n            case 7:\n              accounts = _context2.sent;\n              response.result = accounts;\n              return _context2.abrupt(\"return\", undefined);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x4, _x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n}\n\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(request, response, next) {\n      var method, result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== targetMethod)) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", next());\n\n            case 3:\n              if (handler) {\n                _context3.next = 5;\n                break;\n              }\n\n              throw new Error(\"WalletMiddleware - \".concat(targetMethod, \" not provided\"));\n\n            case 5:\n              _context3.next = 7;\n              return handler(request);\n\n            case 7:\n              result = _context3.sent;\n              response.result = result;\n              return _context3.abrupt(\"return\", undefined);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x7, _x8, _x9) {\n      return _ref7.apply(this, arguments);\n    };\n  }());\n}\n\nfunction createSolanaMiddleware(providerHandlers) {\n  var getAccounts = providerHandlers.getAccounts,\n      requestAccounts = providerHandlers.requestAccounts,\n      signTransaction = providerHandlers.signTransaction,\n      signAndSendTransaction = providerHandlers.signAndSendTransaction,\n      signAllTransactions = providerHandlers.signAllTransactions,\n      signMessage = providerHandlers.signMessage,\n      getPrivateKey = providerHandlers.getPrivateKey;\n  return mergeMiddleware([createRequestAccountsMiddleware({\n    requestAccounts: requestAccounts\n  }), createGetAccountsMiddleware({\n    getAccounts: getAccounts\n  }), createGenericJRPCMiddleware(\"signTransaction\", signTransaction), createGenericJRPCMiddleware(\"signAndSendTransaction\", signAndSendTransaction), createGenericJRPCMiddleware(\"signAllTransactions\", signAllTransactions), createGenericJRPCMiddleware(\"signMessage\", signMessage), createGenericJRPCMiddleware(\"solanaPrivateKey\", getPrivateKey)]);\n}\n\nfunction createChainSwitchMiddleware(_ref3) {\n  var addNewChainConfig = _ref3.addNewChainConfig,\n      switchSolanaChain = _ref3.switchSolanaChain;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"addSolanaChain\", addNewChainConfig), createGenericJRPCMiddleware(\"switchSolanaChain\", switchSolanaChain)]);\n}\n\nfunction createAccountMiddleware(_ref4) {\n  var updatePrivatekey = _ref4.updatePrivatekey;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"updateAccount\", updatePrivatekey)]);\n}\n\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction createInjectedProviderProxyMiddleware(provider) {\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(req, res, _next) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return provider.request(_objectSpread$3({}, req));\n\n            case 2:\n              result = _context4.sent;\n              res.result = result;\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x10, _x11, _x12) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n}\n\nvar getPhantomHandlers = function getPhantomHandlers(injectedProvider) {\n  var providerHandlers = {\n    requestAccounts: function () {\n      var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }(),\n    getAccounts: function () {\n      var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []);\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getAccounts() {\n        return _getAccounts.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    signTransaction: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n        var message, txn, transaction;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                message = bs58.decode(req.params.message);\n                txn = Transaction.from(message);\n                _context8.next = 4;\n                return injectedProvider.signTransaction(txn);\n\n              case 4:\n                transaction = _context8.sent;\n                return _context8.abrupt(\"return\", transaction);\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function signTransaction(_x13) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }(),\n    signMessage: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(req) {\n        var _req$params, message;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return injectedProvider.request({\n                  method: \"signMessage\",\n                  params: {\n                    message: (_req$params = req.params) === null || _req$params === void 0 ? void 0 : _req$params.message\n                  }\n                });\n\n              case 2:\n                message = _context9.sent;\n                return _context9.abrupt(\"return\", message);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function signMessage(_x14) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }(),\n    signAndSendTransaction: function () {\n      var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(req) {\n        var message, txn, txRes;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                message = bs58.decode(req.params.message);\n                txn = Transaction.from(message);\n                _context10.next = 4;\n                return injectedProvider.signAndSendTransaction(txn);\n\n              case 4:\n                txRes = _context10.sent;\n                return _context10.abrupt(\"return\", {\n                  signature: txRes.signature\n                });\n\n              case 6:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function signAndSendTransaction(_x15) {\n        return _signAndSendTransaction.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }(),\n    signAllTransactions: function () {\n      var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(req) {\n        var _req$params2, _req$params3, txns, transaction;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (!(!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message) || !((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message.length))) {\n                  _context11.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                txns = req.params.message.map(function (msg) {\n                  var decodedMsg = bs58.decode(msg);\n                  return Transaction.from(decodedMsg);\n                });\n                _context11.next = 5;\n                return injectedProvider.signAllTransactions(txns);\n\n              case 5:\n                transaction = _context11.sent;\n                return _context11.abrupt(\"return\", transaction);\n\n              case 7:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function signAllTransactions(_x16) {\n        return _signAllTransactions.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }()\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar PhantomInjectedProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(PhantomInjectedProvider, _BaseProvider);\n\n  var _super = _createSuper(PhantomInjectedProvider);\n\n  function PhantomInjectedProvider(_ref) {\n    _classCallCheck(this, PhantomInjectedProvider);\n\n    var config = _ref.config,\n        state = _ref.state;\n    return _super.call(this, {\n      config: {\n        chainConfig: _objectSpread$2(_objectSpread$2({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(PhantomInjectedProvider, [{\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(_) {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt(\"return\", Promise.resolve());\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      function switchChain(_x17) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(injectedProvider) {\n        var providerHandlers, solanaMiddleware, injectedProviderProxy, engine, provider;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                providerHandlers = getPhantomHandlers(injectedProvider);\n                solanaMiddleware = createSolanaMiddleware(providerHandlers);\n                injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n                engine = new JRPCEngine();\n                engine.push(solanaMiddleware);\n                engine.push(injectedProviderProxy);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context13.next = 10;\n                return this.lookupNetwork(injectedProvider);\n\n              case 10:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function setupProvider(_x18) {\n        return _setupProvider.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(_) {\n        var chainConfig;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                chainConfig = this.config.chainConfig;\n                this.update({\n                  chainId: chainConfig.chainId\n                });\n                return _context14.abrupt(\"return\", chainConfig.chainId || \"\");\n\n              case 3:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function lookupNetwork(_x19) {\n        return _lookupNetwork.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }]);\n\n  return PhantomInjectedProvider;\n}(BaseProvider);\n\nvar getTorusHandlers = function getTorusHandlers(injectedProvider) {\n  var providerHandlers = {\n    requestAccounts: function () {\n      var _requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return injectedProvider.request({\n                  method: \"solana_requestAccounts\",\n                  params: {}\n                });\n\n              case 2:\n                accounts = _context15.sent;\n                return _context15.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts2.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }(),\n    getAccounts: function () {\n      var _getAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return injectedProvider.request({\n                  method: \"solana_accounts\",\n                  params: {}\n                });\n\n              case 2:\n                accounts = _context16.sent;\n                return _context16.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      function getAccounts() {\n        return _getAccounts2.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey2.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    signMessage: function () {\n      var _signMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(req) {\n        var _req$params, message;\n\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return injectedProvider.request({\n                  method: \"sign_message\",\n                  params: {\n                    data: (_req$params = req.params) === null || _req$params === void 0 ? void 0 : _req$params.message\n                  }\n                });\n\n              case 2:\n                message = _context18.sent;\n                return _context18.abrupt(\"return\", message);\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      function signMessage(_x20) {\n        return _signMessage2.apply(this, arguments);\n      }\n\n      return signMessage;\n    }(),\n    signTransaction: function () {\n      var _signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(req) {\n        var _req$params2, message, response, buf, sendTx;\n\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                if ((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message) {\n                  _context19.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                message = bs58.decode(req.params.message).toString(\"hex\");\n                _context19.next = 5;\n                return injectedProvider.request({\n                  method: \"sign_transaction\",\n                  params: {\n                    message: message\n                  }\n                });\n\n              case 5:\n                response = _context19.sent;\n                buf = Buffer.from(response, \"hex\");\n                sendTx = Transaction.from(buf);\n                return _context19.abrupt(\"return\", sendTx);\n\n              case 9:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      function signTransaction(_x21) {\n        return _signTransaction2.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }(),\n    signAndSendTransaction: function () {\n      var _signAndSendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(req) {\n        var _req$params3, message, response;\n\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                if ((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message) {\n                  _context20.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                message = bs58.decode(req.params.message).toString(\"hex\");\n                _context20.next = 5;\n                return injectedProvider.request({\n                  method: \"send_transaction\",\n                  params: {\n                    message: message\n                  }\n                });\n\n              case 5:\n                response = _context20.sent;\n                return _context20.abrupt(\"return\", {\n                  signature: response\n                });\n\n              case 7:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20);\n      }));\n\n      function signAndSendTransaction(_x22) {\n        return _signAndSendTransaction2.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }(),\n    signAllTransactions: function () {\n      var _signAllTransactions2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(req) {\n        var _req$params4, _req$params5, messages, _iterator, _step, transaction, message, response;\n\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                if (!(!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length))) {\n                  _context21.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                messages = [];\n                _iterator = _createForOfIteratorHelper(req.params.message);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    transaction = _step.value;\n                    message = bs58.decode(transaction).toString(\"hex\");\n                    messages.push(message);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                _context21.next = 7;\n                return injectedProvider.request({\n                  method: \"sign_all_transactions\",\n                  params: {\n                    message: messages\n                  }\n                });\n\n              case 7:\n                response = _context21.sent;\n                return _context21.abrupt(\"return\", response);\n\n              case 9:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21);\n      }));\n\n      function signAllTransactions(_x23) {\n        return _signAllTransactions2.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }()\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar TorusInjectedProvider = /*#__PURE__*/function (_BaseProvider2) {\n  _inherits(TorusInjectedProvider, _BaseProvider2);\n\n  var _super2 = _createSuper(TorusInjectedProvider);\n\n  function TorusInjectedProvider(_ref) {\n    _classCallCheck(this, TorusInjectedProvider);\n\n    var config = _ref.config,\n        state = _ref.state;\n    return _super2.call(this, {\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(TorusInjectedProvider, [{\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(_) {\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                return _context22.abrupt(\"return\", Promise.resolve());\n\n              case 1:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      function switchChain(_x24) {\n        return _switchChain2.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(injectedProvider) {\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                this.handleInjectedProviderUpdate(injectedProvider);\n                _context23.next = 3;\n                return this.setupEngine(injectedProvider);\n\n              case 3:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function setupProvider(_x25) {\n        return _setupProvider2.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24() {\n        var chainId, connectedChainId, connectedHexChainId;\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                if (this.provider) {\n                  _context24.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Torus solana provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainId = this.config.chainConfig.chainId;\n                _context24.next = 5;\n                return this.provider.request({\n                  method: \"solana_chainId\"\n                });\n\n              case 5:\n                connectedChainId = _context24.sent;\n                connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : \"0x\".concat(parseInt(connectedChainId, 10).toString(16));\n\n                if (!(chainId !== connectedHexChainId)) {\n                  _context24.next = 9;\n                  break;\n                }\n\n                throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n\n              case 9:\n                this.update({\n                  chainId: connectedHexChainId\n                });\n                this.provider.emit(\"connect\", {\n                  chainId: this.state.chainId\n                });\n                this.provider.emit(\"chainChanged\", this.state.chainId);\n                return _context24.abrupt(\"return\", this.state.chainId);\n\n              case 13:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork2.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"setupEngine\",\n    value: function () {\n      var _setupEngine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(injectedProvider) {\n        var providerHandlers, solanaMiddleware, injectedProviderProxy, engine, provider;\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                providerHandlers = getTorusHandlers(injectedProvider);\n                solanaMiddleware = createSolanaMiddleware(providerHandlers);\n                injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n                engine = new JRPCEngine();\n                engine.push(solanaMiddleware);\n                engine.push(injectedProviderProxy);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context25.next = 10;\n                return this.lookupNetwork();\n\n              case 10:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function setupEngine(_x26) {\n        return _setupEngine.apply(this, arguments);\n      }\n\n      return setupEngine;\n    }()\n  }, {\n    key: \"handleInjectedProviderUpdate\",\n    value: function () {\n      var _handleInjectedProviderUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(injectedProvider) {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                injectedProvider.on(\"accountsChanged\", /*#__PURE__*/function () {\n                  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(accounts) {\n                    return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n                      while (1) {\n                        switch (_context26.prev = _context26.next) {\n                          case 0:\n                            _this.provider.emit(\"accountsChanged\", accounts);\n\n                          case 1:\n                          case \"end\":\n                            return _context26.stop();\n                        }\n                      }\n                    }, _callee26);\n                  }));\n\n                  return function (_x28) {\n                    return _ref9.apply(this, arguments);\n                  };\n                }());\n                injectedProvider.on(\"chainChanged\", /*#__PURE__*/function () {\n                  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(chainId) {\n                    var connectedHexChainId;\n                    return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n                      while (1) {\n                        switch (_context27.prev = _context27.next) {\n                          case 0:\n                            connectedHexChainId = isHexStrict(chainId) ? chainId : \"0x\".concat(parseInt(chainId, 10).toString(16)); // Check if chainId changed and trigger event\n\n                            _this.configure({\n                              chainConfig: _objectSpread$1(_objectSpread$1({}, _this.config.chainConfig), {}, {\n                                chainId: connectedHexChainId\n                              })\n                            });\n\n                            _context27.next = 4;\n                            return _this.setupProvider(injectedProvider);\n\n                          case 4:\n                          case \"end\":\n                            return _context27.stop();\n                        }\n                      }\n                    }, _callee27);\n                  }));\n\n                  return function (_x29) {\n                    return _ref10.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28);\n      }));\n\n      function handleInjectedProviderUpdate(_x27) {\n        return _handleInjectedProviderUpdate.apply(this, arguments);\n      }\n\n      return handleInjectedProviderUpdate;\n    }()\n  }]);\n\n  return TorusInjectedProvider;\n}(BaseProvider);\n\nfunction createChainIdMiddleware(chainId) {\n  return function (req, res, next, end) {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\n\nfunction createProviderConfigMiddleware(providerConfig) {\n  return function (req, res, next, end) {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\n\nfunction createJsonRpcClient(providerConfig) {\n  var chainId = providerConfig.chainId,\n      rpcTarget = providerConfig.rpcTarget;\n  var fetchMiddleware = createFetchMiddleware({\n    rpcTarget: rpcTarget\n  });\n  var networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware: networkMiddleware,\n    fetchMiddleware: fetchMiddleware\n  };\n}\n\nfunction getProviderHandlers(_x30) {\n  return _getProviderHandlers.apply(this, arguments);\n}\n\nfunction _getProviderHandlers() {\n  _getProviderHandlers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee51(_ref) {\n    var privKey, getProviderEngineProxy, transactionGenerator, keyPairGenerator, keyPair, providerHandlers;\n    return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n      while (1) {\n        switch (_context51.prev = _context51.next) {\n          case 0:\n            privKey = _ref.privKey, getProviderEngineProxy = _ref.getProviderEngineProxy;\n\n            transactionGenerator = function transactionGenerator(serializedTx) {\n              var decodedTx = bs58.decode(serializedTx);\n              var tx = Transaction.populate(Message.from(decodedTx));\n              return tx;\n            };\n\n            keyPairGenerator = function keyPairGenerator() {\n              return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n            };\n\n            if (!(typeof privKey !== \"string\")) {\n              _context51.next = 5;\n              break;\n            }\n\n            throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n\n          case 5:\n            keyPair = keyPairGenerator();\n            providerHandlers = {\n              requestAccounts: function () {\n                var _requestAccounts4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44() {\n                  return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n                    while (1) {\n                      switch (_context44.prev = _context44.next) {\n                        case 0:\n                          return _context44.abrupt(\"return\", [keyPair.publicKey.toBase58()]);\n\n                        case 1:\n                        case \"end\":\n                          return _context44.stop();\n                      }\n                    }\n                  }, _callee44);\n                }));\n\n                function requestAccounts() {\n                  return _requestAccounts4.apply(this, arguments);\n                }\n\n                return requestAccounts;\n              }(),\n              getAccounts: function () {\n                var _getAccounts3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45() {\n                  return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n                    while (1) {\n                      switch (_context45.prev = _context45.next) {\n                        case 0:\n                          return _context45.abrupt(\"return\", [keyPair.publicKey.toBase58()]);\n\n                        case 1:\n                        case \"end\":\n                          return _context45.stop();\n                      }\n                    }\n                  }, _callee45);\n                }));\n\n                function getAccounts() {\n                  return _getAccounts3.apply(this, arguments);\n                }\n\n                return getAccounts;\n              }(),\n              getPrivateKey: function () {\n                var _getPrivateKey3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46() {\n                  return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n                    while (1) {\n                      switch (_context46.prev = _context46.next) {\n                        case 0:\n                          return _context46.abrupt(\"return\", privKey);\n\n                        case 1:\n                        case \"end\":\n                          return _context46.stop();\n                      }\n                    }\n                  }, _callee46);\n                }));\n\n                function getPrivateKey() {\n                  return _getPrivateKey3.apply(this, arguments);\n                }\n\n                return getPrivateKey;\n              }(),\n              signTransaction: function () {\n                var _signTransaction4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee47(req) {\n                  var _req$params, _req$params2, transaction;\n\n                  return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n                    while (1) {\n                      switch (_context47.prev = _context47.next) {\n                        case 0:\n                          if ((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) {\n                            _context47.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          transaction = transactionGenerator((_req$params2 = req.params) === null || _req$params2 === void 0 ? void 0 : _req$params2.message);\n                          transaction.partialSign(keyPair);\n                          return _context47.abrupt(\"return\", transaction);\n\n                        case 5:\n                        case \"end\":\n                          return _context47.stop();\n                      }\n                    }\n                  }, _callee47);\n                }));\n\n                function signTransaction(_x43) {\n                  return _signTransaction4.apply(this, arguments);\n                }\n\n                return signTransaction;\n              }(),\n              signMessage: function () {\n                var _signMessage4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee48(req) {\n                  var _req$params3, signedMsg;\n\n                  return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n                    while (1) {\n                      switch (_context48.prev = _context48.next) {\n                        case 0:\n                          if ((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message) {\n                            _context48.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n                          return _context48.abrupt(\"return\", signedMsg);\n\n                        case 4:\n                        case \"end\":\n                          return _context48.stop();\n                      }\n                    }\n                  }, _callee48);\n                }));\n\n                function signMessage(_x44) {\n                  return _signMessage4.apply(this, arguments);\n                }\n\n                return signMessage;\n              }(),\n              signAndSendTransaction: function () {\n                var _signAndSendTransaction4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee49(req) {\n                  var _req$params4, _req$params5, _providerEngineProxy, transaction, sig;\n\n                  return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n                    while (1) {\n                      switch (_context49.prev = _context49.next) {\n                        case 0:\n                          if ((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) {\n                            _context49.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          _providerEngineProxy = getProviderEngineProxy();\n\n                          if (_providerEngineProxy) {\n                            _context49.next = 5;\n                            break;\n                          }\n\n                          throw ethErrors.provider.custom({\n                            message: \"Provider is not initialized\",\n                            code: 4902\n                          });\n\n                        case 5:\n                          transaction = transactionGenerator((_req$params5 = req.params) === null || _req$params5 === void 0 ? void 0 : _req$params5.message);\n                          transaction.sign(keyPair);\n                          _context49.next = 9;\n                          return _providerEngineProxy.request({\n                            method: \"sendTransaction\",\n                            params: [bs58.encode(transaction.serialize())]\n                          });\n\n                        case 9:\n                          sig = _context49.sent;\n                          return _context49.abrupt(\"return\", {\n                            signature: sig\n                          });\n\n                        case 11:\n                        case \"end\":\n                          return _context49.stop();\n                      }\n                    }\n                  }, _callee49);\n                }));\n\n                function signAndSendTransaction(_x45) {\n                  return _signAndSendTransaction4.apply(this, arguments);\n                }\n\n                return signAndSendTransaction;\n              }(),\n              signAllTransactions: function () {\n                var _signAllTransactions4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee50(req) {\n                  var _req$params6, _req$params7, signedTransactions, _iterator2, _step2, tx, _req$params8, transaction;\n\n                  return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n                    while (1) {\n                      switch (_context50.prev = _context50.next) {\n                        case 0:\n                          if (!(!((_req$params6 = req.params) !== null && _req$params6 !== void 0 && _req$params6.message) || !((_req$params7 = req.params) !== null && _req$params7 !== void 0 && _req$params7.message.length))) {\n                            _context50.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          signedTransactions = [];\n                          _iterator2 = _createForOfIteratorHelper(((_req$params8 = req.params) === null || _req$params8 === void 0 ? void 0 : _req$params8.message) || []);\n\n                          try {\n                            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                              tx = _step2.value;\n                              transaction = transactionGenerator(tx);\n                              transaction.partialSign(keyPair);\n                              signedTransactions.push(transaction);\n                            }\n                          } catch (err) {\n                            _iterator2.e(err);\n                          } finally {\n                            _iterator2.f();\n                          }\n\n                          return _context50.abrupt(\"return\", signedTransactions);\n\n                        case 6:\n                        case \"end\":\n                          return _context50.stop();\n                      }\n                    }\n                  }, _callee50);\n                }));\n\n                function signAllTransactions(_x46) {\n                  return _signAllTransactions4.apply(this, arguments);\n                }\n\n                return signAllTransactions;\n              }()\n            };\n            return _context51.abrupt(\"return\", providerHandlers);\n\n          case 8:\n          case \"end\":\n            return _context51.stop();\n        }\n      }\n    }, _callee51);\n  }));\n  return _getProviderHandlers.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar SolanaPrivateKeyProvider = /*#__PURE__*/function (_BaseProvider3) {\n  _inherits(SolanaPrivateKeyProvider, _BaseProvider3);\n\n  var _super3 = _createSuper(SolanaPrivateKeyProvider);\n\n  function SolanaPrivateKeyProvider(_ref) {\n    _classCallCheck(this, SolanaPrivateKeyProvider);\n\n    var config = _ref.config,\n        state = _ref.state;\n    return _super3.call(this, {\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(SolanaPrivateKeyProvider, [{\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29() {\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                if (this.state.privateKey) {\n                  _context29.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Private key is not found in state, plz pass it in constructor state param\",\n                  code: 4902\n                });\n\n              case 2:\n                _context29.next = 4;\n                return this.setupProvider(this.state.privateKey);\n\n              case 4:\n                return _context29.abrupt(\"return\", this._providerEngineProxy.request({\n                  method: \"eth_accounts\"\n                }));\n\n              case 5:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(privKey) {\n        var providerHandlers, solanaMiddleware, engine, _createJsonRpcClient, networkMiddleware, provider;\n\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                _context30.next = 2;\n                return getProviderHandlers({\n                  privKey: privKey,\n                  getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n                });\n\n              case 2:\n                providerHandlers = _context30.sent;\n                solanaMiddleware = createSolanaMiddleware(providerHandlers);\n                engine = new JRPCEngine();\n                _createJsonRpcClient = createJsonRpcClient(this.config.chainConfig), networkMiddleware = _createJsonRpcClient.networkMiddleware;\n                engine.push(this.getChainSwitchMiddleware());\n                engine.push(this.getAccountMiddleware());\n                engine.push(solanaMiddleware);\n                engine.push(networkMiddleware);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context30.next = 14;\n                return this.lookupNetwork();\n\n              case 14:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this);\n      }));\n\n      function setupProvider(_x31) {\n        return _setupProvider3.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"updateAccount\",\n    value: function () {\n      var _updateAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31(params) {\n        var existingKey;\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context31.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                _context31.next = 4;\n                return this._providerEngineProxy.request({\n                  method: \"solanaPrivateKey\"\n                });\n\n              case 4:\n                existingKey = _context31.sent;\n\n                if (!(existingKey !== params.privateKey)) {\n                  _context31.next = 14;\n                  break;\n                }\n\n                _context31.next = 8;\n                return this.setupProvider(params.privateKey);\n\n              case 8:\n                _context31.t0 = this._providerEngineProxy;\n                _context31.next = 11;\n                return this._providerEngineProxy.request({\n                  method: \"requestAccounts\"\n                });\n\n              case 11:\n                _context31.t1 = _context31.sent;\n                _context31.t2 = {\n                  accounts: _context31.t1\n                };\n\n                _context31.t0.emit.call(_context31.t0, \"accountsChanged\", _context31.t2);\n\n              case 14:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function updateAccount(_x32) {\n        return _updateAccount.apply(this, arguments);\n      }\n\n      return updateAccount;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32(params) {\n        var chainConfig, privKey;\n        return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context32.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainConfig = this.getChainConfig(params.chainId);\n                this.update({\n                  chainId: \"loading\"\n                });\n                this.configure({\n                  chainConfig: chainConfig\n                });\n                _context32.next = 7;\n                return this._providerEngineProxy.request({\n                  method: \"solanaPrivateKey\"\n                });\n\n              case 7:\n                privKey = _context32.sent;\n                _context32.next = 10;\n                return this.setupProvider(privKey);\n\n              case 10:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this);\n      }));\n\n      function switchChain(_x33) {\n        return _switchChain3.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33() {\n        var health, chainConfig;\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context33.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                _context33.next = 4;\n                return this._providerEngineProxy.request({\n                  method: \"getHealth\",\n                  params: []\n                });\n\n              case 4:\n                health = _context33.sent;\n                chainConfig = this.config.chainConfig;\n\n                if (!(health !== \"ok\")) {\n                  _context33.next = 8;\n                  break;\n                }\n\n                throw WalletInitializationError.rpcConnectionError(\"Failed to lookup network for following rpc target: \".concat(chainConfig.rpcTarget));\n\n              case 8:\n                this.update({\n                  chainId: chainConfig.chainId\n                });\n\n                if (this.state.chainId !== chainConfig.chainId) {\n                  this.provider.emit(\"chainChanged\", this.state.chainId);\n                  this.provider.emit(\"connect\", {\n                    chainId: this.state.chainId\n                  });\n                }\n\n                return _context33.abrupt(\"return\", this.state.chainId);\n\n              case 11:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork3.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"getChainSwitchMiddleware\",\n    value: function getChainSwitchMiddleware() {\n      var _this2 = this;\n\n      var chainSwitchHandlers = {\n        addNewChainConfig: function () {\n          var _addNewChainConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34(req) {\n            var _req$params9, chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency;\n\n            return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n              while (1) {\n                switch (_context34.prev = _context34.next) {\n                  case 0:\n                    if (req.params) {\n                      _context34.next = 2;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing request params\");\n\n                  case 2:\n                    _req$params9 = req.params, chainId = _req$params9.chainId, chainName = _req$params9.chainName, rpcUrls = _req$params9.rpcUrls, blockExplorerUrls = _req$params9.blockExplorerUrls, nativeCurrency = _req$params9.nativeCurrency;\n\n                    if (chainId) {\n                      _context34.next = 5;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n\n                  case 5:\n                    if (!(!rpcUrls || rpcUrls.length === 0)) {\n                      _context34.next = 7;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n\n                  case 7:\n                    if (nativeCurrency) {\n                      _context34.next = 9;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n                  case 9:\n                    _this2.addChain({\n                      chainNamespace: CHAIN_NAMESPACES.SOLANA,\n                      chainId: chainId,\n                      ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"SOL\",\n                      tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Solana\",\n                      displayName: chainName,\n                      rpcTarget: rpcUrls[0],\n                      blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n                    });\n\n                  case 10:\n                  case \"end\":\n                    return _context34.stop();\n                }\n              }\n            }, _callee34);\n          }));\n\n          function addNewChainConfig(_x34) {\n            return _addNewChainConfig.apply(this, arguments);\n          }\n\n          return addNewChainConfig;\n        }(),\n        switchSolanaChain: function () {\n          var _switchSolanaChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35(req) {\n            return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n              while (1) {\n                switch (_context35.prev = _context35.next) {\n                  case 0:\n                    if (req.params) {\n                      _context35.next = 2;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing request params\");\n\n                  case 2:\n                    if (req.params.chainId) {\n                      _context35.next = 4;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n\n                  case 4:\n                    _context35.next = 6;\n                    return _this2.switchChain(req.params);\n\n                  case 6:\n                  case \"end\":\n                    return _context35.stop();\n                }\n              }\n            }, _callee35);\n          }));\n\n          function switchSolanaChain(_x35) {\n            return _switchSolanaChain.apply(this, arguments);\n          }\n\n          return switchSolanaChain;\n        }()\n      };\n      var chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n      return chainSwitchMiddleware;\n    }\n  }, {\n    key: \"getAccountMiddleware\",\n    value: function getAccountMiddleware() {\n      var _this3 = this;\n\n      var accountHandlers = {\n        updatePrivatekey: function () {\n          var _updatePrivatekey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36(req) {\n            var privateKey;\n            return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n              while (1) {\n                switch (_context36.prev = _context36.next) {\n                  case 0:\n                    if (req.params) {\n                      _context36.next = 2;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing request params\");\n\n                  case 2:\n                    if (req.params.privateKey) {\n                      _context36.next = 4;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n\n                  case 4:\n                    privateKey = req.params.privateKey;\n                    _context36.next = 7;\n                    return _this3.updateAccount({\n                      privateKey: privateKey\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context36.stop();\n                }\n              }\n            }, _callee36);\n          }));\n\n          function updatePrivatekey(_x36) {\n            return _updatePrivatekey.apply(this, arguments);\n          }\n\n          return updatePrivatekey;\n        }()\n      };\n      return createAccountMiddleware(accountHandlers);\n    }\n  }]);\n\n  return SolanaPrivateKeyProvider;\n}(BaseProvider);\n\n_defineProperty(SolanaPrivateKeyProvider, \"getProviderInstance\", /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37(params) {\n    var providerFactory;\n    return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n      while (1) {\n        switch (_context37.prev = _context37.next) {\n          case 0:\n            providerFactory = new SolanaPrivateKeyProvider({\n              config: {\n                chainConfig: params.chainConfig\n              }\n            });\n            _context37.next = 3;\n            return providerFactory.setupProvider(params.privKey);\n\n          case 3:\n            return _context37.abrupt(\"return\", providerFactory);\n\n          case 4:\n          case \"end\":\n            return _context37.stop();\n        }\n      }\n    }, _callee37);\n  }));\n\n  return function (_x37) {\n    return _ref11.apply(this, arguments);\n  };\n}());\n\nvar SolanaWallet = /*#__PURE__*/function () {\n  function SolanaWallet(provider) {\n    _classCallCheck(this, SolanaWallet);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    this.provider = provider;\n  }\n\n  _createClass(SolanaWallet, [{\n    key: \"requestAccounts\",\n    value: function () {\n      var _requestAccounts3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                _context38.next = 2;\n                return this.provider.request({\n                  method: \"requestAccounts\",\n                  params: {}\n                });\n\n              case 2:\n                accounts = _context38.sent;\n                return _context38.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts3.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }()\n  }, {\n    key: \"signAndSendTransaction\",\n    value: function () {\n      var _signAndSendTransaction3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39(transaction) {\n        var _yield$this$provider$, signature;\n\n        return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                _context39.next = 2;\n                return this.provider.request({\n                  method: \"signAndSendTransaction\",\n                  params: {\n                    message: bs58.encode(transaction.serialize({\n                      requireAllSignatures: false\n                    }))\n                  }\n                });\n\n              case 2:\n                _yield$this$provider$ = _context39.sent;\n                signature = _yield$this$provider$.signature;\n                return _context39.abrupt(\"return\", {\n                  signature: signature\n                });\n\n              case 5:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39, this);\n      }));\n\n      function signAndSendTransaction(_x38) {\n        return _signAndSendTransaction3.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }()\n  }, {\n    key: \"signTransaction\",\n    value: function () {\n      var _signTransaction3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40(transaction) {\n        var signedTransaction;\n        return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                _context40.next = 2;\n                return this.provider.request({\n                  method: \"signTransaction\",\n                  params: {\n                    message: bs58.encode(transaction.serialize({\n                      requireAllSignatures: false\n                    }))\n                  }\n                });\n\n              case 2:\n                signedTransaction = _context40.sent;\n                return _context40.abrupt(\"return\", signedTransaction);\n\n              case 4:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40, this);\n      }));\n\n      function signTransaction(_x39) {\n        return _signTransaction3.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }()\n  }, {\n    key: \"signAllTransactions\",\n    value: function () {\n      var _signAllTransactions3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41(transactions) {\n        var messages, signedTransaction;\n        return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                messages = transactions.map(function (transaction) {\n                  return bs58.encode(transaction.serialize({\n                    requireAllSignatures: false\n                  }));\n                });\n                _context41.next = 3;\n                return this.provider.request({\n                  method: \"signAllTransactions\",\n                  params: {\n                    message: messages\n                  }\n                });\n\n              case 3:\n                signedTransaction = _context41.sent;\n                return _context41.abrupt(\"return\", signedTransaction);\n\n              case 5:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41, this);\n      }));\n\n      function signAllTransactions(_x40) {\n        return _signAllTransactions3.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }()\n  }, {\n    key: \"signMessage\",\n    value: function () {\n      var _signMessage3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42(data) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                _context42.next = 2;\n                return this.provider.request({\n                  method: \"signMessage\",\n                  params: {\n                    message: data\n                  }\n                });\n\n              case 2:\n                response = _context42.sent;\n                return _context42.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42, this);\n      }));\n\n      function signMessage(_x41) {\n        return _signMessage3.apply(this, arguments);\n      }\n\n      return signMessage;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43(args) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                _context43.next = 2;\n                return this.provider.request(args);\n\n              case 2:\n                result = _context43.sent;\n                return _context43.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43, this);\n      }));\n\n      function request(_x42) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }]);\n\n  return SolanaWallet;\n}();\n\nexport { PhantomInjectedProvider, SolanaPrivateKeyProvider, SolanaWallet, TorusInjectedProvider };","map":{"version":3,"sources":["../src/rpc/solanaRpcMiddlewares.ts","../src/providers/injectedProviders/injectedProviderProxy.ts","../src/providers/injectedProviders/phantom/providerHandlers.ts","../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../src/providers/injectedProviders/torus/providerHandlers.ts","../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../src/rpc/JrpcClient.ts","../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../src/solanaWallet.ts"],"names":["createGetAccountsMiddleware","getAccounts","createAsyncMiddleware","method","next","accounts","response","createRequestAccountsMiddleware","requestAccounts","createGenericJRPCMiddleware","targetMethod","handler","result","createSolanaMiddleware","providerHandlers","getPrivateKey","mergeMiddleware","createChainSwitchMiddleware","switchSolanaChain","createAccountMiddleware","updatePrivatekey","createInjectedProviderProxyMiddleware","provider","res","getPhantomHandlers","injectedProvider","bs58","ethErrors","signTransaction","message","req","txn","Transaction","transaction","signMessage","params","signAndSendTransaction","txRes","signature","signAllTransactions","txns","msg","decodedMsg","PhantomInjectedProvider","BaseProvider","constructor","state","config","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","switchChain","Promise","setupProvider","solanaMiddleware","injectedProviderProxy","engine","providerFromEngine","lookupNetwork","chainId","getTorusHandlers","data","buf","Buffer","sendTx","messages","TorusInjectedProvider","code","connectedChainId","connectedHexChainId","isHexStrict","parseInt","WalletInitializationError","setupEngine","handleInjectedProviderUpdate","createChainIdMiddleware","end","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","getProviderEngineProxy","transactionGenerator","serializedTx","decodedTx","tx","Message","keyPairGenerator","Keypair","keyPair","signedMsg","nacl","_providerEngineProxy","sig","signedTransactions","SolanaPrivateKeyProvider","providerFactory","enable","getProviderHandlers","privKey","updateAccount","existingKey","health","getChainSwitchMiddleware","chainSwitchHandlers","addNewChainConfig","nativeCurrency","rpcUrls","ticker","tickerName","displayName","blockExplorer","chainSwitchMiddleware","getAccountMiddleware","accountHandlers","privateKey","SolanaWallet","requireAllSignatures","signedTransaction","request"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { providerFromEngine, createFetchMiddleware } from '@toruslabs/base-controllers';\nimport { mergeMiddleware, createAsyncMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport { Transaction, Keypair, Message } from '@solana/web3.js';\nimport bs58 from 'bs58';\nimport { ethErrors } from 'eth-rpc-errors';\nimport nacl from '@toruslabs/tweetnacl-js';\n\nfunction createGetAccountsMiddleware(_ref) {\n  let {\n    getAccounts\n  } = _ref;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"getAccounts\") return next();\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\"); // This calls from the prefs controller\n\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createRequestAccountsMiddleware(_ref2) {\n  let {\n    requestAccounts\n  } = _ref2;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"requestAccounts\") return next();\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\"); // This calls the UI login function\n\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== targetMethod) return next();\n    if (!handler) throw new Error(\"WalletMiddleware - \".concat(targetMethod, \" not provided\"));\n    const result = await handler(request);\n    response.result = result;\n    return undefined;\n  });\n}\nfunction createSolanaMiddleware(providerHandlers) {\n  const {\n    getAccounts,\n    requestAccounts,\n    signTransaction,\n    signAndSendTransaction,\n    signAllTransactions,\n    signMessage,\n    getPrivateKey\n  } = providerHandlers;\n  return mergeMiddleware([createRequestAccountsMiddleware({\n    requestAccounts\n  }), createGetAccountsMiddleware({\n    getAccounts\n  }), createGenericJRPCMiddleware(\"signTransaction\", signTransaction), createGenericJRPCMiddleware(\"signAndSendTransaction\", signAndSendTransaction), createGenericJRPCMiddleware(\"signAllTransactions\", signAllTransactions), createGenericJRPCMiddleware(\"signMessage\", signMessage), createGenericJRPCMiddleware(\"solanaPrivateKey\", getPrivateKey)]);\n}\nfunction createChainSwitchMiddleware(_ref3) {\n  let {\n    addNewChainConfig,\n    switchSolanaChain\n  } = _ref3;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"addSolanaChain\", addNewChainConfig), createGenericJRPCMiddleware(\"switchSolanaChain\", switchSolanaChain)]);\n}\nfunction createAccountMiddleware(_ref4) {\n  let {\n    updatePrivatekey\n  } = _ref4;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"updateAccount\", updatePrivatekey)]);\n}\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction createInjectedProviderProxyMiddleware(provider) {\n  return createAsyncMiddleware(async (req, res, _next) => {\n    const result = await provider.request(_objectSpread$3({}, req));\n    res.result = result;\n  });\n}\n\nconst getPhantomHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [],\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async req => {\n      const message = bs58.decode(req.params.message);\n      const txn = Transaction.from(message);\n      const transaction = await injectedProvider.signTransaction(txn);\n      return transaction;\n    },\n    signMessage: async req => {\n      var _req$params;\n\n      const message = await injectedProvider.request({\n        method: \"signMessage\",\n        params: {\n          message: (_req$params = req.params) === null || _req$params === void 0 ? void 0 : _req$params.message\n        }\n      });\n      return message;\n    },\n    signAndSendTransaction: async req => {\n      const message = bs58.decode(req.params.message);\n      const txn = Transaction.from(message);\n      const txRes = await injectedProvider.signAndSendTransaction(txn);\n      return {\n        signature: txRes.signature\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params2, _req$params3;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message) || !((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params.message.map(msg => {\n        const decodedMsg = bs58.decode(msg);\n        return Transaction.from(decodedMsg);\n      });\n      const transaction = await injectedProvider.signAllTransactions(txns);\n      return transaction;\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass PhantomInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$2(_objectSpread$2({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    const providerHandlers = getPhantomHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork(injectedProvider);\n  }\n\n  async lookupNetwork(_) {\n    const {\n      chainConfig\n    } = this.config;\n    this.update({\n      chainId: chainConfig.chainId\n    });\n    return chainConfig.chainId || \"\"; // const genesisHash = await phantomProvider.request<string>({\n    //   method: \"getGenesisHash\",\n    //   params: [],\n    // });\n    // const { chainConfig } = this.config;\n    // if (!genesisHash) throw WalletInitializationError.rpcConnectionError(`Failed to connect with phantom wallet`);\n    // if (chainConfig.chainId !== genesisHash.substring(0, 32))\n    //   throw WalletInitializationError.invalidNetwork(\n    //     `Wallet is connected to wrong network,Please change your network to ${\n    //       SOLANA_NETWORKS[chainConfig.chainId] || chainConfig.displayName\n    //     } from phantom wallet extention.`\n    //   );\n    // return genesisHash.substring(0, 32);\n  }\n\n}\n\nconst getTorusHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_requestAccounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_accounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async req => {\n      var _req$params;\n\n      const message = await injectedProvider.request({\n        method: \"sign_message\",\n        params: {\n          data: (_req$params = req.params) === null || _req$params === void 0 ? void 0 : _req$params.message\n        }\n      });\n      return message;\n    },\n    signTransaction: async req => {\n      var _req$params2;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const message = bs58.decode(req.params.message).toString(\"hex\");\n      const response = await injectedProvider.request({\n        method: \"sign_transaction\",\n        params: {\n          message\n        }\n      });\n      const buf = Buffer.from(response, \"hex\");\n      const sendTx = Transaction.from(buf);\n      return sendTx;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const message = bs58.decode(req.params.message).toString(\"hex\");\n      const response = await injectedProvider.request({\n        method: \"send_transaction\",\n        params: {\n          message\n        }\n      });\n      return {\n        signature: response\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params4, _req$params5;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const messages = [];\n\n      for (const transaction of req.params.message) {\n        const message = bs58.decode(transaction).toString(\"hex\");\n        messages.push(message);\n      }\n\n      const response = await injectedProvider.request({\n        method: \"sign_all_transactions\",\n        params: {\n          message: messages\n        }\n      });\n      return response;\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass TorusInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  async lookupNetwork() {\n    if (!this.provider) throw ethErrors.provider.custom({\n      message: \"Torus solana provider is not initialized\",\n      code: 4902\n    });\n    const {\n      chainId\n    } = this.config.chainConfig;\n    const connectedChainId = await this.provider.request({\n      method: \"solana_chainId\"\n    });\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : \"0x\".concat(parseInt(connectedChainId, 10).toString(16));\n    if (chainId !== connectedHexChainId) throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n    this.update({\n      chainId: connectedHexChainId\n    });\n    this.provider.emit(\"connect\", {\n      chainId: this.state.chainId\n    });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  async setupEngine(injectedProvider) {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async handleInjectedProviderUpdate(injectedProvider) {\n    injectedProvider.on(\"accountsChanged\", async accounts => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async chainId => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : \"0x\".concat(parseInt(chainId, 10).toString(16)); // Check if chainId changed and trigger event\n\n      this.configure({\n        chainConfig: _objectSpread$1(_objectSpread$1({}, this.config.chainConfig), {}, {\n          chainId: connectedHexChainId\n        })\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n\n}\n\nfunction createChainIdMiddleware(chainId) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createJsonRpcClient(providerConfig) {\n  const {\n    chainId,\n    rpcTarget\n  } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({\n    rpcTarget\n  });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware,\n    fetchMiddleware\n  };\n}\n\nasync function getProviderHandlers(_ref) {\n  let {\n    privKey,\n    getProviderEngineProxy\n  } = _ref;\n\n  const transactionGenerator = serializedTx => {\n    const decodedTx = bs58.decode(serializedTx);\n    const tx = Transaction.populate(Message.from(decodedTx));\n    return tx;\n  };\n\n  const keyPairGenerator = () => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n    getPrivateKey: async () => privKey,\n    signTransaction: async req => {\n      var _req$params, _req$params2;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transaction = transactionGenerator((_req$params2 = req.params) === null || _req$params2 === void 0 ? void 0 : _req$params2.message);\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n    signMessage: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params4, _req$params5;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const _providerEngineProxy = getProviderEngineProxy();\n\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const transaction = transactionGenerator((_req$params5 = req.params) === null || _req$params5 === void 0 ? void 0 : _req$params5.message);\n      transaction.sign(keyPair);\n      const sig = await _providerEngineProxy.request({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())]\n      });\n      return {\n        signature: sig\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params6, _req$params7;\n\n      if (!((_req$params6 = req.params) !== null && _req$params6 !== void 0 && _req$params6.message) || !((_req$params7 = req.params) !== null && _req$params7 !== void 0 && _req$params7.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const signedTransactions = [];\n\n      for (const tx of ((_req$params8 = req.params) === null || _req$params8 === void 0 ? void 0 : _req$params8.message) || []) {\n        var _req$params8;\n\n        const transaction = transactionGenerator(tx);\n        transaction.partialSign(keyPair);\n        signedTransactions.push(transaction);\n      }\n\n      return signedTransactions;\n    }\n  };\n  return providerHandlers;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass SolanaPrivateKeyProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async enable() {\n    if (!this.state.privateKey) throw ethErrors.provider.custom({\n      message: \"Private key is not found in state, plz pass it in constructor state param\",\n      code: 4902\n    });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({\n      method: \"eth_accounts\"\n    });\n  }\n\n  async setupProvider(privKey) {\n    const providerHandlers = await getProviderHandlers({\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n    });\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async updateAccount(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const existingKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request({\n          method: \"requestAccounts\"\n        })\n      });\n    }\n  }\n\n  async switchChain(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\"\n    });\n    this.configure({\n      chainConfig\n    });\n    const privKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n    await this.setupProvider(privKey);\n  }\n\n  async lookupNetwork() {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const health = await this._providerEngineProxy.request({\n      method: \"getHealth\",\n      params: []\n    });\n    const {\n      chainConfig\n    } = this.config;\n    if (health !== \"ok\") throw WalletInitializationError.rpcConnectionError(\"Failed to lookup network for following rpc target: \".concat(chainConfig.rpcTarget));\n    this.update({\n      chainId: chainConfig.chainId\n    });\n\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", {\n        chainId: this.state.chainId\n      });\n    }\n\n    return this.state.chainId;\n  }\n\n  getChainSwitchMiddleware() {\n    const chainSwitchHandlers = {\n      addNewChainConfig: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const {\n          chainId,\n          chainName,\n          rpcUrls,\n          blockExplorerUrls,\n          nativeCurrency\n        } = req.params;\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"SOL\",\n          tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n        });\n      },\n      switchSolanaChain: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      }\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  getAccountMiddleware() {\n    const accountHandlers = {\n      updatePrivatekey: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const {\n          privateKey\n        } = req.params;\n        await this.updateAccount({\n          privateKey\n        });\n      }\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n\n}\n\n_defineProperty(SolanaPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new SolanaPrivateKeyProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\nclass SolanaWallet {\n  constructor(provider) {\n    _defineProperty(this, \"provider\", void 0);\n\n    this.provider = provider;\n  }\n\n  async requestAccounts() {\n    const accounts = await this.provider.request({\n      method: \"requestAccounts\",\n      params: {}\n    });\n    return accounts;\n  }\n\n  async signAndSendTransaction(transaction) {\n    const {\n      signature\n    } = await this.provider.request({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: bs58.encode(transaction.serialize({\n          requireAllSignatures: false\n        }))\n      }\n    });\n    return {\n      signature\n    };\n  }\n\n  async signTransaction(transaction) {\n    const signedTransaction = await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: bs58.encode(transaction.serialize({\n          requireAllSignatures: false\n        }))\n      }\n    });\n    return signedTransaction;\n  }\n\n  async signAllTransactions(transactions) {\n    const messages = transactions.map(transaction => {\n      return bs58.encode(transaction.serialize({\n        requireAllSignatures: false\n      }));\n    });\n    const signedTransaction = await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: messages\n      }\n    });\n    return signedTransaction;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"signMessage\",\n      params: {\n        message: data\n      }\n    });\n    return response;\n  }\n\n  async request(args) {\n    const result = await this.provider.request(args);\n    return result;\n  }\n\n}\n\nexport { PhantomInjectedProvider, SolanaPrivateKeyProvider, SolanaWallet, TorusInjectedProvider };\n//# sourceMappingURL=solanaProvider.esm.js.map\n"]},"metadata":{},"sourceType":"module"}