{"ast":null,"code":"import _asyncToGenerator from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/node_modules/@babel/runtime/regenerator/index.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Web3EthContract from 'web3-eth-contract';\nimport { keccak256, toHex } from 'web3-utils';\nvar ETHEREUM_NETWORK = {\n  ROPSTEN: \"ropsten\",\n  MAINNET: \"mainnet\",\n  POLYGON: \"polygon-mainnet\"\n};\nvar abi = [{\n  inputs: [{\n    internalType: \"string\",\n    name: \"_verifier\",\n    type: \"string\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"hashedVerifierId\",\n    type: \"bytes32\"\n  }],\n  name: \"getNodeSet\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"currentEpoch\",\n    type: \"uint256\"\n  }, {\n    internalType: \"string[]\",\n    name: \"torusNodeEndpoints\",\n    type: \"string[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"torusNodePubX\",\n    type: \"uint256[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"torusNodePubY\",\n    type: \"uint256[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"torusIndexes\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\n\nvar NodeDetailManager = /*#__PURE__*/function () {\n  function NodeDetailManager() {\n    _classCallCheck(this, NodeDetailManager);\n\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$network = _ref2.network,\n        network = _ref2$network === void 0 ? ETHEREUM_NETWORK.MAINNET : _ref2$network,\n        _ref2$proxyAddress = _ref2.proxyAddress,\n        proxyAddress = _ref2$proxyAddress === void 0 ? \"0xf20336e16B5182637f09821c27BDe29b0AFcfe80\" : _ref2$proxyAddress;\n\n    _defineProperty(this, \"_currentEpoch\", \"19\");\n\n    _defineProperty(this, \"_torusNodeEndpoints\", [\"https://torus-19.torusnode.com/jrpc\", \"https://torus-node.ens.domains/jrpc\", \"https://torus-node.matic.network/jrpc\", \"https://torus.zilliqa.network/jrpc\", \"https://torus-mainnet.cosmos.network/jrpc\", \"https://torus2.etherscan.com/jrpc\", \"https://torus-node-v2.skalelabs.com/jrpc\", \"https://torus-node.binancex.dev/jrpc\", \"https://torusnode.ont.io/jrpc\"]);\n\n    _defineProperty(this, \"_torusNodePub\", [{\n      X: \"bbe83c64177c3775550e6ba6ac2bc059f6847d644c9e4894e42c60d7974d8c2b\",\n      Y: \"82b49a7caf70def38cdad2740af45c1e4f969650105c5019a29bb18b21a9acb5\"\n    }, {\n      X: \"c208cac4ef9a47d386097a9c915b28e9cb89213abee8d26a17198ee261201b0d\",\n      Y: \"c7db2fe4631109f40833de9dc78d07e35706549ee48fa557b33e4e75e1047873\"\n    }, {\n      X: \"ca1766bb426d4ca5582818a0c5439d560ea64f5baa060793ab29dd3d0ceacfe\",\n      Y: \"d46c1d08c40e1306e1bca328c2287b8268166b11a1ba4b8442ea2ad0c5e32152\"\n    }, {\n      X: \"c3934dd2f6f4b3d2e1e398cc501e143c1e1a381b52feb6d1525af34d16253768\",\n      Y: \"71f5141a5035799099f5ea3e241e66946bc55dc857ac3bd7d6fcdb8dcd3eeeef\"\n    }, {\n      X: \"22e66f1929631d00bf026227581597f085fd94fd952fc0dca9f0833398b5c064\",\n      Y: \"6088b3912e10a1e9d50355a609c10db7d188f16a2e2fd7357e51bf4f6a74f0a1\"\n    }, {\n      X: \"9dc9fa410f3ce9eb70df70cdea00a49f2c4cc7a31c08c0dab5f863ed35ff5139\",\n      Y: \"627a291cb87a75c61da3f65d6818e1e05e360217179817ed27e8c73bca7ec122\"\n    }, {\n      X: \"118b9fc07e97b096d899b9f6658463ce6a8caa64038e37fc969df4e6023dd8c6\",\n      Y: \"baf9fa4e51770f4796ea165dd03a769b8606681a38954a0a92c4cbffd6609ce9\"\n    }, {\n      X: \"8a6d8b925da15a273dec3d8f8395ec35cd6878f274b2b180e4e106999db64043\",\n      Y: \"96f67f870c157743da0b1eb84d89bf30500d74dc84c11f501ee1cb013acc8c46\"\n    }, {\n      X: \"39cecb62e863729f572f7dfc46c24867981bf04bb405fed0df39e33984bfade5\",\n      Y: \"61c2364434012e68a2be2e9952805037e52629d7762fafc8e10e9fb5bad8f790\"\n    }]);\n\n    _defineProperty(this, \"_torusIndexes\", [1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n    _defineProperty(this, \"_network\", ETHEREUM_NETWORK.MAINNET);\n\n    _defineProperty(this, \"nodeListAddress\", void 0);\n\n    _defineProperty(this, \"updated\", void 0);\n\n    _defineProperty(this, \"nodeListContract\", void 0);\n\n    var url;\n\n    try {\n      var localUrl = new URL(network);\n      url = localUrl.href;\n    } catch (_) {\n      var projectId = \"b8cdb0e4cff24599a286bf8e87ff1c96\";\n      url = \"https://\".concat(network, \".infura.io/v3/\").concat(projectId);\n    }\n\n    Web3EthContract.setProvider(url);\n    this.nodeListContract = new Web3EthContract(abi, proxyAddress);\n    this.nodeListAddress = proxyAddress;\n    this.updated = false;\n    this._network = network;\n  }\n\n  _createClass(NodeDetailManager, [{\n    key: \"_nodeDetails\",\n    get: function get() {\n      return {\n        currentEpoch: this._currentEpoch,\n        nodeListAddress: this.nodeListAddress,\n        torusNodeEndpoints: this._torusNodeEndpoints,\n        torusNodePub: this._torusNodePub,\n        torusIndexes: this._torusIndexes,\n        updated: this.updated\n      };\n    }\n  }, {\n    key: \"getNodeDetails\",\n    value: function () {\n      var _getNodeDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var _ref$skip, skip, verifier, verifierId, hashedVerifierId, nodeDetails, currentEpoch, torusNodeEndpoints, torusNodePubX, torusNodePubY, torusIndexes, updatedEndpoints, updatedNodePub, index, endPointElement, pubKx, pubKy, endpoint;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _ref$skip = _ref.skip, skip = _ref$skip === void 0 ? false : _ref$skip, verifier = _ref.verifier, verifierId = _ref.verifierId;\n                _context.prev = 1;\n\n                if (!(skip && this._network === ETHEREUM_NETWORK.MAINNET)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._nodeDetails);\n\n              case 4:\n                if (!(this.updated && this._network === ETHEREUM_NETWORK.MAINNET)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._nodeDetails);\n\n              case 6:\n                hashedVerifierId = keccak256(verifierId);\n                _context.next = 9;\n                return this.nodeListContract.methods.getNodeSet(verifier, hashedVerifierId).call();\n\n              case 9:\n                nodeDetails = _context.sent;\n                currentEpoch = nodeDetails.currentEpoch, torusNodeEndpoints = nodeDetails.torusNodeEndpoints, torusNodePubX = nodeDetails.torusNodePubX, torusNodePubY = nodeDetails.torusNodePubY, torusIndexes = nodeDetails.torusIndexes;\n                this._currentEpoch = currentEpoch;\n                this._torusIndexes = torusIndexes.map(function (x) {\n                  return Number(x);\n                });\n                updatedEndpoints = [];\n                updatedNodePub = [];\n\n                for (index = 0; index < torusNodeEndpoints.length; index += 1) {\n                  endPointElement = torusNodeEndpoints[index];\n                  pubKx = torusNodePubX[index];\n                  pubKy = torusNodePubY[index];\n                  endpoint = \"https://\".concat(endPointElement.split(\":\")[0], \"/jrpc\");\n                  updatedEndpoints.push(endpoint);\n                  updatedNodePub.push({\n                    X: toHex(pubKx).replace(\"0x\", \"\"),\n                    Y: toHex(pubKy).replace(\"0x\", \"\")\n                  });\n                }\n\n                this._torusNodeEndpoints = updatedEndpoints;\n                this._torusNodePub = updatedNodePub;\n                this.updated = true;\n                return _context.abrupt(\"return\", this._nodeDetails);\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](1);\n\n                if (!(this._network === ETHEREUM_NETWORK.MAINNET)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._nodeDetails);\n\n              case 26:\n                throw _context.t0;\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 22]]);\n      }));\n\n      function getNodeDetails(_x) {\n        return _getNodeDetails.apply(this, arguments);\n      }\n\n      return getNodeDetails;\n    }()\n  }]);\n\n  return NodeDetailManager;\n}();\n\nexport { ETHEREUM_NETWORK, abi, NodeDetailManager as default };","map":{"version":3,"sources":["../src/interfaces.ts","../src/nodeDetailManager.ts"],"names":["ETHEREUM_NETWORK","ROPSTEN","MAINNET","POLYGON","abi","inputs","internalType","name","type","outputs","stateMutability","X","Y","constructor","network","proxyAddress","localUrl","url","projectId","Web3EthContract","_nodeDetails","currentEpoch","nodeListAddress","torusNodeEndpoints","torusNodePub","torusIndexes","updated","getNodeDetails","skip","verifierId","hashedVerifierId","keccak256","nodeDetails","x","Number","updatedEndpoints","updatedNodePub","index","endPointElement","pubKx","torusNodePubX","pubKy","torusNodePubY","endpoint","toHex"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Web3EthContract from 'web3-eth-contract';\nimport { keccak256, toHex } from 'web3-utils';\n\nconst ETHEREUM_NETWORK = {\n  ROPSTEN: \"ropsten\",\n  MAINNET: \"mainnet\",\n  POLYGON: \"polygon-mainnet\"\n};\nconst abi = [{\n  inputs: [{\n    internalType: \"string\",\n    name: \"_verifier\",\n    type: \"string\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"hashedVerifierId\",\n    type: \"bytes32\"\n  }],\n  name: \"getNodeSet\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"currentEpoch\",\n    type: \"uint256\"\n  }, {\n    internalType: \"string[]\",\n    name: \"torusNodeEndpoints\",\n    type: \"string[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"torusNodePubX\",\n    type: \"uint256[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"torusNodePubY\",\n    type: \"uint256[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"torusIndexes\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\n\nclass NodeDetailManager {\n  constructor() {\n    let {\n      network = ETHEREUM_NETWORK.MAINNET,\n      proxyAddress = \"0xf20336e16B5182637f09821c27BDe29b0AFcfe80\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"_currentEpoch\", \"19\");\n\n    _defineProperty(this, \"_torusNodeEndpoints\", [\"https://torus-19.torusnode.com/jrpc\", \"https://torus-node.ens.domains/jrpc\", \"https://torus-node.matic.network/jrpc\", \"https://torus.zilliqa.network/jrpc\", \"https://torus-mainnet.cosmos.network/jrpc\", \"https://torus2.etherscan.com/jrpc\", \"https://torus-node-v2.skalelabs.com/jrpc\", \"https://torus-node.binancex.dev/jrpc\", \"https://torusnode.ont.io/jrpc\"]);\n\n    _defineProperty(this, \"_torusNodePub\", [{\n      X: \"bbe83c64177c3775550e6ba6ac2bc059f6847d644c9e4894e42c60d7974d8c2b\",\n      Y: \"82b49a7caf70def38cdad2740af45c1e4f969650105c5019a29bb18b21a9acb5\"\n    }, {\n      X: \"c208cac4ef9a47d386097a9c915b28e9cb89213abee8d26a17198ee261201b0d\",\n      Y: \"c7db2fe4631109f40833de9dc78d07e35706549ee48fa557b33e4e75e1047873\"\n    }, {\n      X: \"ca1766bb426d4ca5582818a0c5439d560ea64f5baa060793ab29dd3d0ceacfe\",\n      Y: \"d46c1d08c40e1306e1bca328c2287b8268166b11a1ba4b8442ea2ad0c5e32152\"\n    }, {\n      X: \"c3934dd2f6f4b3d2e1e398cc501e143c1e1a381b52feb6d1525af34d16253768\",\n      Y: \"71f5141a5035799099f5ea3e241e66946bc55dc857ac3bd7d6fcdb8dcd3eeeef\"\n    }, {\n      X: \"22e66f1929631d00bf026227581597f085fd94fd952fc0dca9f0833398b5c064\",\n      Y: \"6088b3912e10a1e9d50355a609c10db7d188f16a2e2fd7357e51bf4f6a74f0a1\"\n    }, {\n      X: \"9dc9fa410f3ce9eb70df70cdea00a49f2c4cc7a31c08c0dab5f863ed35ff5139\",\n      Y: \"627a291cb87a75c61da3f65d6818e1e05e360217179817ed27e8c73bca7ec122\"\n    }, {\n      X: \"118b9fc07e97b096d899b9f6658463ce6a8caa64038e37fc969df4e6023dd8c6\",\n      Y: \"baf9fa4e51770f4796ea165dd03a769b8606681a38954a0a92c4cbffd6609ce9\"\n    }, {\n      X: \"8a6d8b925da15a273dec3d8f8395ec35cd6878f274b2b180e4e106999db64043\",\n      Y: \"96f67f870c157743da0b1eb84d89bf30500d74dc84c11f501ee1cb013acc8c46\"\n    }, {\n      X: \"39cecb62e863729f572f7dfc46c24867981bf04bb405fed0df39e33984bfade5\",\n      Y: \"61c2364434012e68a2be2e9952805037e52629d7762fafc8e10e9fb5bad8f790\"\n    }]);\n\n    _defineProperty(this, \"_torusIndexes\", [1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n    _defineProperty(this, \"_network\", ETHEREUM_NETWORK.MAINNET);\n\n    _defineProperty(this, \"nodeListAddress\", void 0);\n\n    _defineProperty(this, \"updated\", void 0);\n\n    _defineProperty(this, \"nodeListContract\", void 0);\n\n    let url;\n\n    try {\n      const localUrl = new URL(network);\n      url = localUrl.href;\n    } catch (_) {\n      const projectId = \"b8cdb0e4cff24599a286bf8e87ff1c96\";\n      url = \"https://\".concat(network, \".infura.io/v3/\").concat(projectId);\n    }\n\n    Web3EthContract.setProvider(url);\n    this.nodeListContract = new Web3EthContract(abi, proxyAddress);\n    this.nodeListAddress = proxyAddress;\n    this.updated = false;\n    this._network = network;\n  }\n\n  get _nodeDetails() {\n    return {\n      currentEpoch: this._currentEpoch,\n      nodeListAddress: this.nodeListAddress,\n      torusNodeEndpoints: this._torusNodeEndpoints,\n      torusNodePub: this._torusNodePub,\n      torusIndexes: this._torusIndexes,\n      updated: this.updated\n    };\n  }\n\n  async getNodeDetails(_ref) {\n    let {\n      skip = false,\n      verifier,\n      verifierId\n    } = _ref;\n\n    try {\n      if (skip && this._network === ETHEREUM_NETWORK.MAINNET) return this._nodeDetails; // Do this only for mainnet where the list is static irrespective of verifier, verifierId\n\n      if (this.updated && this._network === ETHEREUM_NETWORK.MAINNET) return this._nodeDetails;\n      const hashedVerifierId = keccak256(verifierId);\n      const nodeDetails = await this.nodeListContract.methods.getNodeSet(verifier, hashedVerifierId).call();\n      const {\n        currentEpoch,\n        torusNodeEndpoints,\n        torusNodePubX,\n        torusNodePubY,\n        torusIndexes\n      } = nodeDetails;\n      this._currentEpoch = currentEpoch;\n      this._torusIndexes = torusIndexes.map(x => Number(x));\n      const updatedEndpoints = [];\n      const updatedNodePub = [];\n\n      for (let index = 0; index < torusNodeEndpoints.length; index += 1) {\n        const endPointElement = torusNodeEndpoints[index];\n        const pubKx = torusNodePubX[index];\n        const pubKy = torusNodePubY[index];\n        const endpoint = \"https://\".concat(endPointElement.split(\":\")[0], \"/jrpc\");\n        updatedEndpoints.push(endpoint);\n        updatedNodePub.push({\n          X: toHex(pubKx).replace(\"0x\", \"\"),\n          Y: toHex(pubKy).replace(\"0x\", \"\")\n        });\n      }\n\n      this._torusNodeEndpoints = updatedEndpoints;\n      this._torusNodePub = updatedNodePub;\n      this.updated = true;\n      return this._nodeDetails;\n    } catch (error) {\n      if (this._network === ETHEREUM_NETWORK.MAINNET) {\n        return this._nodeDetails;\n      }\n\n      throw error;\n    }\n  }\n\n}\n\nexport { ETHEREUM_NETWORK, abi, NodeDetailManager as default };\n//# sourceMappingURL=fetchNodeDetails.esm.js.map\n"]},"metadata":{},"sourceType":"module"}