{"ast":null,"code":"var _jsxFileName = \"/Users/shash24/Desktop/Blockchain/Dao/DAO-start/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./pages.css\";\nimport { TabList, Tab, Widget, Tag, Table, Form } from \"web3uikit\";\nimport { Link } from \"react-router-dom\";\nimport { useMoralis, useMoralisWeb3Api, useWeb3ExecuteFunction } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [passRate, setPassRate] = useState(0);\n  const [totalP, setTotalP] = useState(0);\n  const [counted, setCounted] = useState(0);\n  const [voters, setVoters] = useState(0);\n  const {\n    Moralis,\n    isInitialized\n  } = useMoralis();\n  const [proposals, setProposals] = useState();\n  const Web3Api = useMoralisWeb3Api();\n  const [sub, setSub] = useState();\n  const contractProcessor = useWeb3ExecuteFunction(); // async function createProposal(newProposal) {\n  //   let options = {\n  //     contractAddress: \"0xF304Ddf294d05c80995FB0702b40DfEA8E48582a\",\n  //     functionName: \"createProposal\",\n  //     abi: [\n  //       {\n  //         inputs: [\n  //           {\n  //             internalType: \"string\",\n  //             name: \"_description\",\n  //             type: \"string\",\n  //           },\n  //           {\n  //             internalType: \"address[]\",\n  //             name: \"_canVote\",\n  //             type: \"address[]\",\n  //           },\n  //         ],\n  //         name: \"createProposal\",\n  //         outputs: [],\n  //         stateMutability: \"nonpayable\",\n  //         type: \"function\",\n  //       },\n  //     ],\n  //     params: {\n  //       _description: newProposal,\n  //       _canVote: voters,\n  //     },\n  //   };\n  //   await contractProcessor.fetch({\n  //     params: options,\n  //     onSuccess: () => {\n  //       console.log(\"Proposal Succesful\");\n  //       setSub(false);\n  //     },\n  //     onError: (error) => {\n  //       alert(error.data.message);\n  //       setSub(false);\n  //     },\n  //   });\n  // }\n\n  async function getStatus(proposalId) {\n    const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\n    const query = new Moralis.Query(ProposalCounts);\n    query.equalTo(\"uid\", proposalId);\n    const result = await query.first();\n\n    if (result !== undefined) {\n      if (result.attributes.passed) {\n        return {\n          color: \"green\",\n          text: \"Passed\"\n        };\n      } else {\n        return {\n          color: \"red\",\n          text: \"Rejected\"\n        };\n      }\n    } else {\n      return {\n        color: \"blue\",\n        text: \"Ongoing\"\n      };\n    }\n  }\n\n  useEffect(() => {\n    if (isInitialized) {\n      async function getProposals() {\n        const Proposals = Moralis.Object.extend(\"Proposals\");\n        const query = new Moralis.Query(Proposals);\n        query.descending(\"uid_decimal\");\n        const results = await query.find();\n        const table = await Promise.all(results.map(async e => [e.attributes.uid, e.attributes.description, /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/proposal\",\n          state: {\n            description: e.attributes.description,\n            color: (await getStatus(e.attributes.uid)).color,\n            text: (await getStatus(e.attributes.uid)).text,\n            id: e.attributes.uid,\n            proposer: e.attributes.proposer\n          },\n          children: /*#__PURE__*/_jsxDEV(Tag, {\n            color: (await getStatus(e.attributes.uid)).color,\n            text: (await getStatus(e.attributes.uid)).text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]));\n        setProposals(table);\n        setTotalP(results.length);\n      }\n\n      async function getPassRate() {\n        const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\n        const query = new Moralis.Query(ProposalCounts);\n        const results = await query.find();\n        let votesUp = 0;\n        results.forEach(e => {\n          if (e.attributes.passed) {\n            votesUp++;\n          }\n        });\n        setCounted(results.length);\n        setPassRate(votesUp / results.length * 100);\n      }\n\n      getProposals();\n      getPassRate();\n    }\n  }, [isInitialized]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(TabList, {\n        defaultActiveKey: 1,\n        tabStyle: \"bulbUnion\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          tabName: \"DAO\",\n          tabKey: 1,\n          children: proposals && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabContent\",\n            children: [\"Governance Overview\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"widgets\",\n              children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                style: {\n                  width: \"200%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Widget, {\n                  info: totalP,\n                  title: \"Proposals Created\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"extraWidgetInfo\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"extraTitle\",\n                      children: \"Pass Rate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progressPercentage\",\n                        style: {\n                          width: `${passRate}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Widget, {\n                info: 420,\n                title: \"Eligible Voters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Widget, {\n                info: totalP - counted,\n                title: \"Ongoing Proposals\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), \"Recent Proposals\", /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"30px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                columnsConfig: \"10% 70% 20%\",\n                alignCellItems: \"center\",\n                data: proposals,\n                header: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)],\n                pageSize: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              buttonConfig: {\n                isLoading: false,\n                loadingText: \"Submitting Proposal\",\n                text: \"Submit\",\n                theme: \"secondary\"\n              },\n              data: [{\n                inputWidth: \"100%\",\n                name: \"New Proposal\",\n                type: \"textarea\",\n                validation: {\n                  required: true\n                },\n                value: \"\"\n              }],\n              onSubmit: e => {\n                alert(\"Proposal Submitted\");\n              },\n              title: \"Create a New Proposal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          tabName: \"Forum\",\n          tabKey: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          tabName: \"Docs\",\n          tabKey: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"r/EAYYzgmrXwdeXJ6TUih6lLjoY=\", false, function () {\n  return [useMoralis, useMoralisWeb3Api, useWeb3ExecuteFunction];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/shash24/Desktop/Blockchain/Dao/DAO-start/src/pages/Home.js"],"names":["React","useEffect","useState","TabList","Tab","Widget","Tag","Table","Form","Link","useMoralis","useMoralisWeb3Api","useWeb3ExecuteFunction","Home","passRate","setPassRate","totalP","setTotalP","counted","setCounted","voters","setVoters","Moralis","isInitialized","proposals","setProposals","Web3Api","sub","setSub","contractProcessor","getStatus","proposalId","ProposalCounts","Object","extend","query","Query","equalTo","result","first","undefined","attributes","passed","color","text","getProposals","Proposals","descending","results","find","table","Promise","all","map","e","uid","description","id","proposer","length","getPassRate","votesUp","forEach","width","marginTop","isLoading","loadingText","theme","inputWidth","name","type","validation","required","value","alert"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./pages.css\";\nimport { TabList, Tab, Widget, Tag, Table, Form } from \"web3uikit\";\nimport { Link } from \"react-router-dom\";\nimport { useMoralis, useMoralisWeb3Api, useWeb3ExecuteFunction } from \"react-moralis\";\n\nconst Home = () => {\n  const [passRate, setPassRate] = useState(0);\n  const [totalP, setTotalP] = useState(0);\n  const [counted, setCounted] = useState(0);\n  const [voters, setVoters] = useState(0);\n  const { Moralis, isInitialized } = useMoralis();\n  const [proposals, setProposals] = useState();\n  const Web3Api = useMoralisWeb3Api();\n  const [sub, setSub] = useState();\n  const contractProcessor = useWeb3ExecuteFunction();\n\n  // async function createProposal(newProposal) {\n  //   let options = {\n  //     contractAddress: \"0xF304Ddf294d05c80995FB0702b40DfEA8E48582a\",\n  //     functionName: \"createProposal\",\n  //     abi: [\n  //       {\n  //         inputs: [\n  //           {\n  //             internalType: \"string\",\n  //             name: \"_description\",\n  //             type: \"string\",\n  //           },\n  //           {\n  //             internalType: \"address[]\",\n  //             name: \"_canVote\",\n  //             type: \"address[]\",\n  //           },\n  //         ],\n  //         name: \"createProposal\",\n  //         outputs: [],\n  //         stateMutability: \"nonpayable\",\n  //         type: \"function\",\n  //       },\n  //     ],\n  //     params: {\n  //       _description: newProposal,\n  //       _canVote: voters,\n  //     },\n  //   };\n\n\n  //   await contractProcessor.fetch({\n  //     params: options,\n  //     onSuccess: () => {\n  //       console.log(\"Proposal Succesful\");\n  //       setSub(false);\n  //     },\n  //     onError: (error) => {\n  //       alert(error.data.message);\n  //       setSub(false);\n  //     },\n  //   });\n\n\n  // }\n\n\n  async function getStatus(proposalId) {\n    const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\n    const query = new Moralis.Query(ProposalCounts);\n    query.equalTo(\"uid\", proposalId);\n    const result = await query.first();\n    if (result !== undefined) {\n      if (result.attributes.passed) {\n        return { color: \"green\", text: \"Passed\" };\n      } else {\n        return { color: \"red\", text: \"Rejected\" };\n      }\n    } else {\n      return { color: \"blue\", text: \"Ongoing\" };\n    }\n  }\n\n  useEffect(() => {\n    if (isInitialized) {\n\n      async function getProposals() {\n        const Proposals = Moralis.Object.extend(\"Proposals\");\n        const query = new Moralis.Query(Proposals);\n        query.descending(\"uid_decimal\");\n        const results = await query.find();\n        const table = await Promise.all(\n          results.map(async (e) => [\n            e.attributes.uid,\n            e.attributes.description,\n            <Link to=\"/proposal\" state={{\n              description: e.attributes.description,\n              color: (await getStatus(e.attributes.uid)).color,\n              text: (await getStatus(e.attributes.uid)).text,\n              id: e.attributes.uid,\n              proposer: e.attributes.proposer\n              \n              }}>\n              <Tag\n                color={(await getStatus(e.attributes.uid)).color}\n                text={(await getStatus(e.attributes.uid)).text}\n              />\n            </Link>,\n          ])\n        );\n        setProposals(table);\n        setTotalP(results.length);\n      }\n\n\n      async function getPassRate() {\n        const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\n        const query = new Moralis.Query(ProposalCounts);\n        const results = await query.find();\n        let votesUp = 0;\n\n        results.forEach((e) => {\n          if (e.attributes.passed) {\n            votesUp++;\n          }\n        });\n\n        setCounted(results.length);\n        setPassRate((votesUp / results.length) * 100);\n      }\n      getProposals();\n      getPassRate();\n      \n    }\n  }, [isInitialized]);\n\n\n  return (\n    <>\n      <div className=\"content\">\n        <TabList defaultActiveKey={1} tabStyle=\"bulbUnion\">\n          <Tab tabName=\"DAO\" tabKey={1}>\n            {proposals&&(\n            <div className=\"tabContent\">\n              Governance Overview\n              <div className=\"widgets\">\n                <section style={{width:\"200%\"}}>\n                <Widget info={totalP} title=\"Proposals Created\" >\n                  <div className=\"extraWidgetInfo\">\n                    <div className=\"extraTitle\">Pass Rate</div>\n                    <div className=\"progress\">\n                      <div className=\"progressPercentage\" style={{width:`${passRate}%`}}>\n                      </div>\n                    </div>\n                  </div>\n                </Widget>\n                </section>\n                <Widget info={420} title=\"Eligible Voters\"></Widget>\n                <Widget info={totalP-counted} title=\"Ongoing Proposals\"></Widget>\n              </div>\n              Recent Proposals\n              <div style={{ marginTop: \"30px\" }}>\n                <Table\n                  columnsConfig=\"10% 70% 20%\"\n                  \n                  alignCellItems=\"center\"\n                  data={proposals}\n                  header={[\n                    <span>ID</span>,\n                    <span>Description</span>,\n                    <span>Status</span>,\n                  ]}\n                  pageSize={5}\n                />\n              </div>\n\n              <Form\n                  buttonConfig={{\n                    isLoading: false,\n                    loadingText: \"Submitting Proposal\",\n                    text: \"Submit\",\n                    theme: \"secondary\",\n                  }}\n                  data={[\n                    {\n                      inputWidth: \"100%\",\n                      name: \"New Proposal\",\n                      type: \"textarea\",\n                      validation: {\n                        required: true,\n                      },\n                      value: \"\",\n                    },\n                  ]}\n                  onSubmit={(e) => {\n                    alert(\"Proposal Submitted\")\n                  }}\n                  title=\"Create a New Proposal\"\n                />\n\n            </div>\n            )}\n          </Tab>\n          <Tab tabName=\"Forum\" tabKey={2}></Tab>\n          <Tab tabName=\"Docs\" tabKey={3}></Tab>\n        </TabList>\n      </div>\n      <div className=\"voting\"></div>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}